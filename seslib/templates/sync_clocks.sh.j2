
{% if version == "ses5" %}
systemctl enable ntpd.service
cat > /etc/ntp.conf <<EOF
interface listen all
{% if node == master %}
server 0.europe.pool.ntp.org burst iburst
server 1.europe.pool.ntp.org burst iburst
server 2.europe.pool.ntp.org burst iburst
{% else %}
server master
{% endif %}
EOF
{% if node == master %}
{% set ntp_script = "ntp_sync_start.sh" %}
cat > {{ ntp_script }} << 'EOF'
#!/bin/bash
NTP_SERVER="$1"

function try_wait {
    local cmd="$1"
    local tries="$2"
    local sleep_secs="$3"
    for i in $(seq 1 "$tries") ; do
        set -x
        $cmd
        set +x
        SAVED_STATUS="$?"
        test "$SAVED_STATUS" = "0" && break
        set -x
        sleep "$sleep_secs"
        set +x
    done
}

try_wait "ntpdate -b $NTP_SERVER" 10 5
try_wait "sntp --timeout=15 --step $NTP_SERVER" 10 5
try_wait "timeout 10s ntpd -gq" 10 0
systemctl start ntpd.service
sleep 1
ntpq -pn
EOF
chmod 755 {{ ntp_script }}
./{{ ntp_script }} 0.europe.pool.ntp.org
{% for _node in nodes %}
{% if _node != master %}
scp -o StrictHostKeyChecking=no {{ ntp_script }} {{ _node.name }}:
{% endif %}
{% endfor %}
{% for _node in nodes %}
{% if _node != master %}
ssh -o StrictHostKeyChecking=no {{ _node.name }} ./{{ ntp_script }} master &
{% endif %}
{% endfor %}
wait
{% endif %} {# node == master #}
{% endif %} {# version == "ses5" #}
{% if version == "ses6" or version == "nautilus" %}
systemctl enable chronyd.service
cat > /etc/chrony.conf <<EOF
{% if node == master %}
pool 0.europe.pool.ntp.org iburst
{% else %}
pool master
{% endif %}
local stratum 10
manual
allow
driftfile /var/lib/chrony/drift
makestep 0.1 3
rtcsync
logdir /var/log/chrony
EOF
{% if node == master %}
{% set chrony_script = "chrony_sync_start.sh" %}
cat > {{ chrony_script }} << 'EOF'
#!/bin/bash

set -x

function try_wait {
    local cmd="$1"
    local tries="$2"
    local sleep_secs="$3"
    set +x
    for i in $(seq 1 "$tries") ; do
        set -x
        $cmd
        set +x
        SAVED_STATUS="$?"
        test "$SAVED_STATUS" = "0" && break
        set -x
        sleep "$sleep_secs"
        set +x
    done
    set -x
}

systemctl start chronyd.service
chronyc makestep
stdbuf -o0 chronyc waitsync
try_wait "chronyc -n sources" 10 5
EOF
chmod 755 {{ chrony_script }}
./{{ chrony_script }}
{% for _node in nodes %}
{% if _node != master %}
scp -o StrictHostKeyChecking=no {{ chrony_script }} {{ _node.name }}:
{% endif %}
{% endfor %}
{% for _node in nodes %}
{% if _node != master %}
CURRENT_TIME="$(date --iso=seconds)"
ssh -o StrictHostKeyChecking=no {{ _node.name }} date --set "$CURRENT_TIME"
ssh -o StrictHostKeyChecking=no {{ _node.name }} ./{{ chrony_script }} &
{% endif %}
{% endfor %}
wait
{% endif %} {# node == master #}
{% endif %} {# if version == "ses6" or version == "nautilus" #}
